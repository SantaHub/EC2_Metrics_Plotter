{
  "name": "Ec2 metrics plotter",
  "tagline": "EC2 instance CloudWatch metrics plotter.",
  "body": "# CloudWatch AWS/EC2 instance metrics plotter.\r\nPurpose:\r\n - Generate and plot statistics for CloudWatch EC2 instance.\r\n - All Metrics and statistics are supported\r\n \r\nIncluded:\r\n\r\n+ *Statistics*:\r\n\tSum,Maximum,Minimum,SampleCount,Average\r\n\t\r\n+ *Metrics*:\r\n\tCPUUtilization,NetworkIn,NetworkOut,NetworkPacketsIn,\r\n\tNetworkPacketsOut,DiskWriteBytes,DiskReadBytes,DiskWriteOps,\r\n\tDiskReadOps,CPUCreditBalance,CPUCreditUsage,StatusCheckFailed,\r\n\tStatusCheckFailed_Instance,StatusCheckFailed_System\r\n\t\r\nWrote using Python/boto3.\r\nCompiled using PyInstaller\r\n\r\n##Version\r\n\r\nOS|Platform|Version \r\n---|---|---- | -------------\r\nWindows|32bit|[0.1.0 beta]\r\n\r\n##Purpose\r\n\r\n- Generate plots for AWS-ECS metrics and statistics.\r\n- Helps you generate plots on demand and review them using generated html report.\r\n\r\n## How it works\r\n- ec2metrics.exe connects to EC2 and reads datapoints for given CloudWatch EC2 instance/metric/statistic combo.\r\n- Using matplotlib plot is created and saved on the filesystem.\r\n- Html report is generated allowing preview saved metric plots.\r\n- It will not work for group CloudWatch EC2 instances metrics.\r\n\r\n##Audience\r\n\r\nDatabase/ETL developers, Data Integrators, Data Engineers, Business Analysts, AWS Developers, DevOps\r\n\r\n##Designated Environment\r\nPre-Prod (UAT/QA/DEV)\r\n\r\n##Usage\r\n\r\n```\r\nC:\\Python35-32>dist\\ec2metrics\\ec2metrics.exe\r\n## Plots EC2 CPUUtilization metric for given instance id.\r\n##\r\n## Generates matplotlib plots for given instance/statistic/metric.\r\n##\r\nUsage:\r\n  set AWS_ACCESS_KEY_ID=<you access key>\r\n  set AWS_SECRET_ACCESS_KEY=<you secret key>\r\n  set AWS_DEFAULT_REGION=<your region > (for example:us-west-2 )\r\n  ec2metrics.exe [<instance>] [<period_min>] [<from_min>] [<to_min>]\r\n        [<statistic>] [<metric_name>] [<namespace>]\r\n        [<show_plot> or <show_report>]\r\n        [<plot_dir>] [<plot_dir>]\r\n\r\n        [-b] --instance         -- EC2 instance name (i-********).\r\n        [-p] --period_min       -- Aggregation interval (5 min).\r\n        [-f] --from_min         -- Start from, min (60).\r\n        [-t] --to_min           -- End at, min (0 - present).\r\n        [-s] --statistic        -- Statistic type (Average).\r\n           Could be one of: Sum,Maximum,Minimum,SampleCount,Average\r\n        [-m] --metric_name  -- Metric name (CPUUtilization)\r\n           Could be one of:\r\n                CPUUtilization,NetworkIn,NetworkOut,NetworkPacketsIn,\r\n                NetworkPacketsOut,DiskWriteBytes,DiskReadBytes,DiskWriteOps,\r\n                DiskReadOps,CPUCreditBalance,CPUCreditUsage,StatusCheckFailed,\r\n                StatusCheckFailed_Instance,StatusCheckFailed_System\r\n        [-g] --namespace        -- CloudWatch namespace,\r\n        container for metric (AWS/EC2).\r\n\r\n        [-r] --show_plot        -- Open plotter window (False).\r\n        [-n] --show_report  -- Open browser with html report (True).\r\n\r\n        [-d] --plot_dir         -- Target plot dir (plots).\r\n        [-e] --plot_dir         -- Timestamp for to append to plot_dir\r\n        (current date).\r\n\r\n        Index.html is generated in <plot_dir>\\<timestamp>\r\n\r\n```\r\n\r\n##Environment variables\r\n\r\n```\r\n  set AWS_ACCESS_KEY_ID=<you access key>\r\n  set AWS_SECRET_ACCESS_KEY=<you secret key>\r\n  set AWS_DEFAULT_REGION=<your region > (for example:us-west-2 )\r\n```\r\n\r\n#Examples\r\n\r\n### Plot \"Average,Minimum\" for \"NetworkIn\" CloudWatch EC2 metric.\r\n\r\n\r\n```\r\nec2metrics.exe --instance i-fe9cea26 -f 1000  -p 10  -s Average,Minimum -m NetworkIn  -r\r\n\r\n200(0100/0100): i-fe9cea26: NetworkIn: Sum\r\n200(0100/0100): i-fe9cea26: NetworkIn: Maximum\r\n200(0100/0100): i-fe9cea26: NetworkIn: Minimum\r\n200(0100/0100): i-fe9cea26: NetworkIn: SampleCount\r\n200(0100/0100): i-fe9cea26: NetworkIn: Average\r\n\r\nReport is at: C:\\Python35-32\\plots\\20160327_220118\\index.html\r\n\r\n```\r\n\r\n####Result:\r\n\r\n![NetworkIn/Average/10min] (https://raw.githubusercontent.com/alexbuz/EC2_Metrics_Plotter/master/plots/EC2_NetworkIn/by_metric/NetworkIn/Average/10/NetworkIn.Average.10.i-fe9cea26.png)\r\n\r\n#### Html report\r\nReport is generated with preview for all plots created with this job.\r\n![ALL](https://raw.githubusercontent.com/alexbuz/EC2_Metrics_Plotter/master/plot_reports/networkin.png)\r\n\r\n\r\n\r\n### Plot \"Sum,Maximum,Minimum,SampleCount,Average\" stats for \"CPUUtilization\" CloudWatch EC2 metric.\r\n\r\n\r\n```\r\nec2metrics.exe --instance i-fe9cea26 -f 500  -p 1  -s Sum,Maximum,Minimum,SampleCount,Average -m CPUUtilization  -r\r\n200(0084/0099): i-fe9cea26: CPUUtilization: Sum\r\n200(0084/0099): i-fe9cea26: CPUUtilization: Maximum\r\n200(0000/0099): i-fe9cea26: CPUUtilization: Minimum\r\n200(0099/0099): i-fe9cea26: CPUUtilization: SampleCount\r\n200(0084/0099): i-fe9cea26: CPUUtilization: Average\r\n\r\nReport is at: c:\\Python35-32\\plots\\20160328_113906\\index.html\r\n\r\n```\r\n\r\n####Result:\r\n\r\n![CPUCreditUsage/Average/30min] (https://raw.githubusercontent.com/alexbuz/EC2_Metrics_Plotter/master/plots/CPUUtilization/by_instance/i-fe9cea26/1/CPUUtilization.Average.1.i-fe9cea26.png)\r\n\r\n\r\n### Plot \"Sum,Maximum,Minimum,SampleCount,Average\" stats for \"CPUCreditUsage\" CloudWatch EC2 metric.\r\n\r\n\r\n```\r\nec2metrics.exe --instance i-fe9cea26 -f 6000  -p 30  -s Sum,Maximum,Minimum,SampleCount,Average -m CPUCreditUsage  -r -t 3000 -e CPUCreditUsage\r\n200(0006/0027): i-fe9cea26: CPUCreditUsage: Sum\r\n200(0006/0027): i-fe9cea26: CPUCreditUsage: Maximum\r\n200(0001/0027): i-fe9cea26: CPUCreditUsage: Minimum\r\n200(0027/0027): i-fe9cea26: CPUCreditUsage: SampleCount\r\n200(0006/0027): i-fe9cea26: CPUCreditUsage: Average\r\nReport is at: c:\\Python35-32\\plots\\CPUCreditUsage\\index.html\r\n\r\n```\r\n\r\n####Result:\r\n\r\n![CPUCreditUsage/Average/30min] (https://raw.githubusercontent.com/alexbuz/EC2_Metrics_Plotter/master/plots/CPUCreditUsage/by_metric/CPUCreditUsage/Average/30/CPUCreditUsage.Average.30.i-fe9cea26.png)\r\n\r\n\r\n### Plot all stats for all CloudWatch EC2 metrics.\r\n\r\n\r\n```\r\nc:\\Python35-32>dist\\ec2metrics\\ec2metrics.exe --from_min 3000 --instance 'i-fe9cea26,i-fe9cea26' --metric_name CPUUtilization,NetworkIn,NetworkOut,NetworkPacketsIn,NetworkPacketsOut,DiskWriteBytes,DiskReadBytes,DiskWriteOps,DiskReadOps,CPUCreditBalance,CPUCreditUsage,StatusCheckFailed,StatusCheckFailed_Instance,StatusCheckFailed_System --namespace AWS/EC2 --period_min 1 --plot_dir C:\\Python35-32\\plots --statistic Average,Minimum,Maximum,Sum  --to_min 2000 -r -e All_Metrics\r\n\r\n200(0174/0200): i-fe9cea26: CPUUtilization: Average\r\n200(0001/0200): i-fe9cea26: CPUUtilization: Minimum\r\n200(0174/0200): i-fe9cea26: CPUUtilization: Maximum\r\n200(0174/0200): i-fe9cea26: CPUUtilization: Sum\r\n200(0200/0200): i-fe9cea26: NetworkIn: Average\r\n...\r\n200(0000/1000): i-fe9cea26: StatusCheckFailed_Instance: Sum\r\n200(0000/1000): i-fe9cea26: StatusCheckFailed_System: Average\r\n200(0000/1000): i-fe9cea26: StatusCheckFailed_System: Minimum\r\n200(0000/1000): i-fe9cea26: StatusCheckFailed_System: Maximum\r\n200(0000/1000): i-fe9cea26: StatusCheckFailed_System: Sum\r\n\r\nReport is at: C:\\Python35-32\\plots\\All_Metrics\\index.html\r\n\r\n```\r\n\r\n####Result:\r\nOne of the plots:\r\n![NetworkIn/Average/10min] (https://raw.githubusercontent.com/alexbuz/EC2_Metrics_Plotter/master/plots/CPUCreditBalance/by_instance/i-fe9cea26/30/CPUCreditBalance.Sum.30.i-fe9cea26.png)\r\n\r\n#### Html report\r\nReport is generated with preview for all plots created with this job.\r\n![ALL](https://raw.githubusercontent.com/alexbuz/EC2_Metrics_Plotter/master/plot_reports/all.png)\r\n\r\n\r\n##Download\r\n* [Master Release](https://github.com/alexbuz/EC2_Metrics_Plotter/archive/master.zip) -- `ec2metrics 0.1.0`\r\n\r\n\r\n#   \r\n#FAQ\r\n#  \r\n#### Can I genereate images of all metrics?\r\nYes, it is the main purpose of this tool.\r\n\r\n#### Can developers integrate `EC2_Metrics_Plotter` into their ETL pipelines?\r\nYes. Assuming they are doing it on OS Windows.\r\n\r\n#### Explain how you generate plots.\r\nI use `matplotlib.pyplot` Python module to do it.\r\nScript is accessing CloudWatch using boto, retrieving metric data and generating plot images.\r\n\r\n\r\n#### Explain what is included in HTML reports?\r\nReports include all plot for a given script execution. You can see all plots on one page.\r\n\r\n\r\n#### What technology was used to create this tool\r\nI used `Python`, `matplotlib.pyplot`, and `boto3` to write it and `pyInstaller` to compile it in 64-bit windows executable.\r\n\r\n#### do you use CloudWatch AWS CLI?\r\nNo, I use boto3 to make cals to CloudWatch API.\r\n\r\n#### What CloudWatch metrics are included?\r\nThis version of Metrics Plotter is tested for EC2 metrics only.\r\nMetrics included:\r\n    CPUUtilization,NetworkIn,NetworkOut,NetworkPacketsIn,\r\n    NetworkPacketsOut,DiskWriteBytes,DiskReadBytes,DiskWriteOps,\r\n    DiskReadOps,CPUCreditBalance,CPUCreditUsage,StatusCheckFailed,\r\n    StatusCheckFailed_Instance,StatusCheckFailed_System\r\n\t\r\n#### Does it extract CloudWatch metrics data in csv file?\r\nNo\r\n\r\n#### Does it use S3 to read metrics?\r\nNo, it uses AWS API to read metrics directly from CloudWatch bypassing reports generated on S3.\r\n\r\n#### Where are the sources?\r\nPlease, contact me for sources.\r\n\r\n#### Can you modify functionality and add features?\r\nYes, please, ask me for new features.\r\n\r\n#### What other AWS tools you've created?\r\n- [Oracle_To_S3_Data_Uploader] (https://github.com/alexbuz/Oracle_To_S3_Data_Uploader) - Stream Oracle data to Amazon- S3.\r\n- [CSV_Loader_For_Redshift] (https://github.com/alexbuz/CSV_Loader_For_Redshift/blob/master/README.md) - Append CSV data to Amazon-Redshift from Windows.\r\n- [S3_Sanity_Check] (https://github.com/alexbuz/S3_Sanity_Check/blob/master/README.md) - let's you `ping` Amazon-S3 bucket to see if it's publicly readable.\r\n- [Oracle-To-Redshift-Data-Loader](https://github.com/alexbuz/Oracle-To-Redshift-Data-Loader) - plots any CloudWatch EC2 instance  metric stats.\r\n- [S3_File_Uploader](https://github.com/alexbuz/S3_File_Uploader/blob/master/README.md) - uploads file from Windows to S3.\r\n\r\n#### Do you have any AWS Certifications?\r\nYes, [AWS Certified Developer (Associate)](https://raw.githubusercontent.com/alexbuz/FAQs/master/images/AWS_Ceritied_Developer_Associate.png)\r\n\r\n#### Can you create similar/custom data tool for our business?\r\nYes, you can PM me here or email at `alex_buz@yahoo.com`.\r\nI'll get back to you within hours.\r\n\r\n###Links\r\n - [Employment FAQ](https://github.com/alexbuz/FAQs/blob/master/README.md)\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}